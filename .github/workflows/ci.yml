name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop, remote]
  pull_request:
    branches: [main, master]
  workflow_dispatch: # Permite executar manualmente

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Job de validação rápida
  quick-checks:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate package.json
        run: npm run lint:check || true

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate || true

  # Lint e formatação
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    needs: quick-checks

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci

      - name: ESLint
        run: npm run lint:check

      - name: Prettier
        run: npm run format:check

      - name: TypeScript
        run: npx tsc --noEmit

  # Testes unitários
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quick-checks

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm ci

      - name: Run tests
        run: npm test -- --coverage --passWithNoTests

      - name: Upload coverage
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # Build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci

      - name: Build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/
          retention-days: 7

  # Job de sucesso (para branch protection)
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ CI failed!"
            exit 1
          fi
          echo "✅ All CI checks passed!"
